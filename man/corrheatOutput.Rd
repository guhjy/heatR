% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corrheat.R
\name{corrheatOutput}
\alias{corrheatOutput}
\alias{renderCorrheat}
\title{Wrapper functions for using corrheat in shiny}
\usage{
corrheatOutput(outputId, width = "100\%", height = "400px")

renderCorrheat(expr, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{outputId}{Output variable to read from}

\item{width, height}{The width and height of the map (see
\link[htmlwidgets]{shinyWidgetOutput})}

\item{expr}{An expression that generates a \code{\link[d3heatmap]{d3heatmap}} object}

\item{env}{The environment in which to evaluate \code{expr}}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}
}
\description{
Use \code{corrheatOutput} to create a UI element, and \code{renderCorrheat}
to render the heatmap.
}
\details{
Note that this is not a priority in the least for me at this time,
  but I went ahead and ported the d3heatmap code and at least the following
  example will work fine.
}
\examples{
\donttest{
library(heatR)
library(shiny)

ui = fluidPage(
  h1('A corrheat demo'),
  selectInput('data', 'Data', c('mtcars', 'bfi', 'state.x77'), selected='bfi'),
  corrheatOutput('heatmap')
)

server = function(input, output) {
  datasetInput = reactive({
    switch(input$data,
           'mtcars' = mtcars,
           'bfi' = bfi,
           'state.x77' = state.x77)
  })
  output$heatmap = renderCorrheat({
    corrheat(cor(datasetInput(), use='pair'))
  })
}

shinyApp(ui, server)
}

}
\seealso{
\code{\link{corrheat}}, \code{\link[d3heatmap]{d3heatmapOutput}},
\code{\link[d3heatmap]{renderD3heatmap}}
}
